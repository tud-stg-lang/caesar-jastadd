ClassDecl class_declaration =
    cclass_declaration.c                       {: return c; :}
  ;
  
CjClassDecl cclass_declaration =
    modifiers.m? CCLASS IDENTIFIER mixin.s? interfaces.i? class_body.b 
                                               {: return CjClassDecl.createCjClassDecl(new Modifiers(m), IDENTIFIER, s, i, b); :}
  ;  

List mixin =
    EXTENDS mixin_type_list.i                  {: return i; :}
  ;
List mixin_type_list =
    mixin_type.t                               {: return new List().add(t); :}
  | mixin_type_list.l AND mixin_type.t         {: return l.add(t); :}
  ;
Access mixin_type =
    name.n                                     {: return n; :}
  ;

Expr primary_no_new_array =
    primitive_type.n DOT CCLASS                 {: return new CjClassAccess(n); :}
  | name.n DOT CCLASS                           {: return new CjClassAccess(n); :}
  | VOID DOT CCLASS                             {: return new CjClassAccess(new PrimitiveTypeAccess("void")); :}
  ;
