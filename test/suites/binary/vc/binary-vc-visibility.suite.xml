<testsuite name="Visibility issues: Virtual classes accessing enclosing-type members" package="binary.vc.visibility">

	<compile id="visibility001" description="accessing private members of enclosing type">
		<code>
			public cclass Test {
				OuterA.InnerA innerA = OuterA.new InnerA();
				innerA.doAction(); 
			}
		</code>
        <binary>
        	public cclass OuterA {
				private String message;
				public cclass InnerA {
					private void doAction() {
						message = "Goodbye";
					}
				}
			}
        </binary>
    </compile>
	
	<compile id="visibility002" description="accessing private members of enclosing type, longer chain">
		<code>
			public cclass Test {
				OuterA.InnerA.DeepA deepA = OuterA.new InnerA().new DeepA();
				deepA.doAction(); 
			}
		</code>
        <binary>
        	public cclass OuterA {
				private String message;
				public cclass InnerA {
					public cclass DeepA {
						private void doAction() {
							message = "Goodbye";
						}
					}
				}
			}
        </binary>
    </compile>
    	    
	<!--
	<compile id="visibility003" description="accessing private members of enclosing type of parent virtual class">
		<code>
			public cclass OuterB extends OuterA {
				public cclass InnerB extends OuterA.InnerA {
					public InnerB(String msg) {
						message = msg;
						doAction();
					}
				} 
			}
		</code>
        <binary>
        	public cclass OuterA {
				private String message;
				private void doAction() { }
				public cclass InnerA {
				}
			}
        </binary>
    </compile>
	
	
	<compile id="visibility004" description="accessing private members of sibling virtual class (same enclosing type)  (should this be allowed?)">
		<code>
			public cclass OuterB extends OuterA {
				public cclass InnerB {
					public InnerB(String msg) {
						message = msg;
					}
				} 
			}

			
		</code>
        <binary>
        	public cclass OuterA {
				public cclass InnerA {
					private String message;
				}
			}
        </binary>
    </compile>
	-->
	

</testsuite>
