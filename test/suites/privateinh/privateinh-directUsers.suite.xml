<testsuite name="usage semantics for direct users" package="privateinh.directUsers">

<compile-run id="directUsers001"
				 description="methods should be accessible">
		
		<code>
			public cclass A {
				public String a(){ return "a"; }
			}
			
			public cclass B uses A {}
		</code>	
		
		<test>
			B b = new B();
			
			assertEquals(b.a(), "a");
		</test>
		
</compile-run>

<compile-run id="directUsers002"
				 description="contract fulfilled by used class">
		
		<code>
			public abstract cclass A {
				public abstract String a();
			}
			
			public cclass ProvA extends A {
				public String a() { return "a"; }
			}
			
			public cclass B extends A uses ProvA {}
		</code>	
		
		<test>
			B b = new B();
			
			assertEquals(b.a(), "a");
		</test>
		
</compile-run>

<compile-check-error id="directUsers003" 
						 error="???"
						 description="Direct users must fulfil used contract">
		<code>
			public abstract cclass A {
				public String a() { return "a"; }
				public abstract String b();
			}
		
			// FIXME: B has to fulfil A's contract...
			// Does this make sense?  
			// Should we demand all used classes be complete???
			// Or at least concrete (non-abstract)?
			public cclass B uses A {
			 	public String ba() { return "b" + a(); } 
			}
		</code>
</compile-check-error>

</testsuite>