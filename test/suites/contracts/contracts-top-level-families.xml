<testsuite name="Test direct contracts between top-level families"
	package="contracts.toplevel">

	<compile id="toplevel001"
			 description="test successful compilation of a concrete but incomplete top-level family">
		<code>
			// Define contracts

			public abstract cclass ContractFamilyA {
				public cclass MemberA {
					public abstract String a();
				}
			}

			public abstract cclass ContractFamilyB {
				public cclass MemberB {
					public abstract String b();
				}
			}

			// Concrete via requirements and should thus compile
			public cclass ProvA extends ContractFamilyA requires ContractFamilyB {
				public cclass MemberA {
					public String a(){
						return "a";
					}
				}
			}
        </code>
	</compile>
	
	<compile-check-error id="toplevel002" 
						 error="CLASS_MUST_IMPLEMENT"
						 description="test compilation error for a top-level family that breaks its contract">
		<code>
			// Define contract
			public abstract cclass ContractFamilyA {
				public cclass MemberA {
					public abstract String a();
				}	
			}
			
			
			// ProvA breaks its contract
			public cclass ProvA extends ContractFamilyA {}
        </code>
	</compile-check-error>
	
	<compile-check-error id="toplevel003"
						 error="NEW_INCOMPLETE"
					 	 description="Incomplete top-level families should not be instantiable">
		
		<code>
			// Declare contracts
			public abstract cclass ContractFamilyA {
				public cclass A {
					public abstract String a();
				}
			}
			
			// Incomplete family
			public cclass IncompleteFamilyA requires ContractFamilyA {}
			
			// Try to instantiate incomplete family
			public class Test {
				public void test(){
					IncompleteFamilyA icfa = new IncompleteFamilyA();
				}
			}					
		</code>
	
	</compile-check-error>
	
	<compile-run id="toplevel004"
				 description="Complete top-level families should be instantiable">
		<code>
			// Declare contracts
			public abstract cclass ContractFamilyA {
				public cclass A {
					public abstract String a();
				}
			}
			
			public abstract cclass ContractFamilyB {
				public cclass B {
					public abstract String b();
				}
			}
			
			// Providers and clients
			public cclass ProvFamilyA extends ContractFamilyA requires ContractFamilyB {
				public cclass A {
					public String a() { return "a";}
				}		
			}	
			
			public cclass ProvFamilyB extends ContractFamilyB requires ContractFamilyA {
				public cclass B {
					public String b() { return "b";}
				}		
			}	
			
			// Complete family
			public cclass CompleteFamilyAB extends ProvFamilyA &amp; ProvFamilyB {
				public String ab(){
					A featureA = new A();
					B featureB = new B();
					
					return featureA.a() + featureB.b();
				}
			}
							
		</code>
		
		<test>
			CompleteFamilyAB f = new CompleteFamilyAB();
			
			assertEquals("ab", f.ab());
		</test>
	</compile-run>
	
</testsuite>